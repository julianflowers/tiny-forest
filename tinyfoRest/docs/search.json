[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/using-tinyfoRest.html","id":"what-is-the-tinyforest-package","dir":"Articles","previous_headings":"","what":"What is the tinyfoRest package?","title":"How to use the `tinyfoRest` package","text":"aim tinyfoRest provide set tools designed extract, manipulate analyse data relevant location Tiny Forests UK. Specifically extracts processes landcover biodiversity data range sources given area around Tiny Forest locations, provides set tools analysing citizen science data derived directly Tiny Forests. Tiny Forests small scale dense native tree plantings usually urban areas - managed Earthwatch. https://earthwatch.org.uk/get-involved/tiny-forest","code":""},{"path":"/articles/using-tinyfoRest.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"How to use the `tinyfoRest` package","text":"package hosted Github work progress. can installed running devtools::install_github(\"julianflowers/tiy-forest/tinyfoRest\"). loads another Github package myScrapers needed download data Tiny Forest website. package makes use number Application Programming Interfaces (APIs) require API keys need applied separately. outlined relevant sections vignette. uses range Python packages access datasets (cases Python packages better developed R). reason first step run initialise_tf() intialise package. : Loads reticulate package R uses talk Python Sets Python virtual environment (VE) called tinyforest, ensures R uses correct version Python specifying RETICULATE_PYTHON environment variable. may necessary restart R make sure R correctly uses . asked want remove tinyforest environment. Say “” unless previous installation trouble. create clean install VE. Installs number Python packages tinyforest environment. include earthengine-api enables access Google Earth Engine (GEE) geemap - set added value tools extract manipulate GEE data osdatahub - access Ordnance Survey National Geographic Database data. OSGridConverter - converts lat-longs UK Grid references eemont - calculates range vegetation indices Sentinel2 satellite images Imports relevant modules use packages","code":""},{"path":"/articles/using-tinyfoRest.html","id":"install-and-initialise","dir":"Articles","previous_headings":"Getting started","what":"Install and initialise","title":"How to use the `tinyfoRest` package","text":"First install load package. initialise tinyfoRest","code":"if(!require(\"tinyfoRest\")) devtools::install_github(\"julianflowers/tiny-forest/tinyfoRest\", force = FALSE) devtools::install_github(\"julianflowers/myScrapers\") needs(tinyfoRest, sf, myScrapers, rvest) initialise_tf() #> virtualenv: tinyforest #> Using virtual environment 'tinyforest' ..."},{"path":"/articles/using-tinyfoRest.html","id":"load-tiny-forest-data","dir":"Articles","previous_headings":"","what":"Load Tiny Forest data","title":"How to use the `tinyfoRest` package","text":"next step load Tiny Forest (TF) data. exists series web pages get_tf_data function identifies relevant pages iterates extract name, id, location, area, planters, types tree planted (list column), TFs planted time extraction. include TFs planted outside UK. function takes 120 seconds iterate relevant pages. get_tf_data 4 things: extracts data frame Tiny Forest names IDs extracts data frame additional TF details (tree species, areas locations) extracts sf (spatial) data frame UK data locations produces interactive map TF locations Producing simple map simple loading tf_data$map. can draw sophisticated static map using tf_data$tidy_tf_sf.  simple draw time series plots…  data loaded can save csv file get high level information planting, timings, size .","code":"tf_data <- get_tf_data() #> 166.997 sec elapsed tf_data$map ## load UK boundary files uk <- read_sf(\"https://services1.arcgis.com/ESMARspQHYMw9BZ9/arcgis/rest/services/Countries_December_2022_UK_BGC/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson\")  ## create map ggplot() +   geom_sf(data = uk, fill = \"white\") +   geom_sf(data = tf_data$tidy_tf_sf, pch = 1, aes(colour = factor(year(plant_date)))) +   labs(title = \"Tiny Forest locations 2024\",       subtitle = paste(\"N = \", nrow(tf_data$tidy_tf_sf))) +   theme_void() +   scale_colour_viridis_d(option = \"turbo\") df <- tf_data$tidy_tf_sf  df |>   count(year = year(plant_date)) |>   ggplot() +   geom_col(aes(year, n)) +   geom_label(aes(year, n, label = n)) +   labs(title = \"TFs planted per year\") +   theme_minimal() +   theme(plot.title.position = \"plot\") needs(patchwork)  ## annual planting  tf_trees <- df |>   mutate(trees_1 = str_split(trees, \"\\\\|\")) |>   select(-trees) |>   unnest(\"trees_1\") |>   mutate(trees_1 = str_remove(trees_1, \"\\nExport Tags\"))  tf_trees$trees_1 |>   unique() #>  [1] \"Apple, crab(Malus sylvestris) \"                #>  [2] \" Birch, downy(Betula pubescens) \"              #>  [3] \" Birch, silver(Betula pendula) \"               #>  [4] \" Blackthorn(Prunus spinosa) \"                  #>  [5] \" Dogwood(Cornus sanguinea) \"                   #>  [6] \" Elder(Sambucus nigra) \"                       #>  [7] \" Guelder, rose(Viburnum opulus) \"              #>  [8] \" Hazel(Corylus avellana) \"                     #>  [9] \" Maple, field(Acer campestre) \"                #> [10] \" Oak, english(Quercus robur) \"                 #> [11] \" Oak, sessile(Quercus petraea) \"               #> [12] \" Willow, goat(Salix caprea)\"                   #> [13] \"Alder(Alnus glutinosa) \"                       #> [14] \" Apple, crab(Malus sylvestris) \"               #> [15] \" Cherry, bird(Prunus padus) \"                  #> [16] \" Cherry, wild(Prunus avium) \"                  #> [17] \" Common privet(Ligustrum vulgare) \"            #> [18] \" Elm, wych(Ulmus glabra) \"                     #> [19] \" Hawthorn(Crataegus monogyna) \"                #> [20] \" Hornbeam(Carpinus betulus) \"                  #> [21] \" Lime, large-leaved(Tilia platyphyllos) \"      #> [22] \" Lime, small-leaved(Tilia cordata) \"           #> [23] \" Rowan(Sorbus aucuparia) \"                     #> [24] \" Spindle(Euonymus europaea) \"                  #> [25] \" Wild service tree(Sorbus torminalis)\"         #> [26] \" Alder buckthorn(Frangula alnus) \"             #> [27] \" Dog Rose(Rosa canina) \"                       #> [28] \" Poplar, black(Poplus nigra) \"                 #> [29] \" Wild service tree(Sorbus torminalis) \"        #> [30] \" Beech, common(Fagus sylvatica) \"              #> [31] \" Wayfaring tree(Viburnum lantana) \"            #> [32] \" Whitebeam(Sorbus aria) \"                      #> [33] \" Broom(Cytisus scoparius) \"                    #> [34] \" Gorse(Ulex europaeus) \"                       #> [35] \" Heather(Calluna vulgaris) \"                   #> [36] \" Holly(Ilex aquifolium) \"                      #> [37] \" Pine, scots(Pinus sylvestris)\"                #> [38] \"Alder buckthorn(Frangula alnus) \"              #> [39] \" Willow, goat(Salix caprea) \"                  #> [40] \" Willow, grey(Salix cinerea subsp. Oleifolia)\" #> [41] \"Beech, common(Fagus sylvatica) \"               #> [42] \" Bilberry(Vaccinium myrtillus) \"               #> [43] \" Juniper(Juniperus communis) \"                 #> [44] \" Pine, scots(Pinus sylvestris) \"               #> [45] \" Rowan(Sorbus aucuparia)\"                      #> [46] \" Whitebeam(Sorbus aria)\"                       #> [47] \" Spindle(Euonymus europaea)\"                   #> [48] \"Bilberry(Vaccinium myrtillus) \"                #> [49] \" Alder, grey(Alnus incana) \"                   #> [50] \" Ash(Fraxinus excelsior) \"                     #> [51] \" Elm, english(Ulmus procera) \"                 #> [52] \" Willow, common osier(Salix viminalis)\"        #> [53] \" Oak, sessile(Quercus petraea)\"                #> [54] \" Buckthorn, purging(Rhamnus cathartica) \"      #> [55] \" Pear, common(Pyrus communis) \"                #> [56] \" Aspen(Populus tremula) \"                      #> [57] \" Wayfaring tree(Viburnum lantana)\"             #> [58] \"Birch, downy(Betula pubescens) \"               #> [59] \" Oak, english(Quercus robur)\"                  #> [60] \"Aspen(Populus tremula) \"                       #> [61] \"Alder, grey(Alnus incana) \"                    #> [62] \" Alder, red(Alnus rubra) \"                     #> [63] \"Alder, red(Alnus rubra) \"                      #> [64] \" Hawthorn, midland(Crataegus laevigata) \"      #> [65] \" Willow, common osier(Salix viminalis) \"       #> [66] \" Cherry Plum(Prunus cerasifera) \"              #> [67] \" Sea-buckthorn(Hippophae rhamnoides) \"         #> [68] \" Wild rasperry(Rubus idaeus) \"                 #> [69] \" Common walnut (Juglans regia) \"               #> [70] \" Sweet chestnut(Castanea sativa) \"             #> [71] \" Willow, eared(Salix aurita) \"                 #> [72] \" Box, common(Buxus sempervirens) \"             #> [73] \"Birch, silver(Betula pendula) \"                #> [74] \" Service tree, wild(Sorbus torminalis) \"  tf_trees |>   group_by(tf_id) |>   summarise(n = n()) |>   ggplot(aes(n)) +   geom_histogram() +   labs(title = \"Distribution of tree species\",         x = \"Number of tree species per TF\") +   theme_minimal() +   theme(plot.title.position = \"plot\")"},{"path":"/articles/using-tinyfoRest.html","id":"tree-species","dir":"Articles","previous_headings":"","what":"Tree species","title":"How to use the `tinyfoRest` package","text":"can also look planting frequency different tree species.","code":"tf_trees |>   ungroup() |>   count(trees_1, sort = TRUE) |>   top_n(25, n) |>   ggplot() +   geom_col(aes(n, reorder(trees_1, n))) +   labs(y = \"\",         title = \"Most commonly planted tree species\",         x = \"Number of Tiny Forests\") +  # ggthemes::theme_base() +   theme(plot.title.position = \"plot\") +   theme_minimal() +   theme(plot.title.position = \"plot\")"},{"path":"/articles/using-tinyfoRest.html","id":"what-do-tfs-look-like","dir":"Articles","previous_headings":"","what":"What do TFs look like?","title":"How to use the `tinyfoRest` package","text":"can also download image TF via Google Maps. requires API key can obtained : https://developers.google.com/maps/documentation/streetview/cloud-setup","code":"library(ggmap);library(magick)  tf_df <- tf_data$tidy_tf  api_key <- Sys.getenv(\"GOOGLE_MAPS\")  image <- get_tf_images(lon = tf_df$lon[100], lat = tf_df$lat[100], key = api_key, zoom = 20, tf_id = tf_df$tf_id[100])  image_read(image)"},{"path":"/articles/using-tinyfoRest.html","id":"biodiversity-data","dir":"Articles","previous_headings":"","what":"Biodiversity data","title":"How to use the `tinyfoRest` package","text":"get_nbn_buffer downloads occurrence data NBN Atlas set buffer around given longitude latitude. example can download 30000 records around (Darlington TF). Note: extracting data APIs helps create “safe” version function especially aare making multiple API calls (see ). makes sure function keep running. achieved using safely function stores output list 2 variables - result error. get results need extract result vector.  ecological analyses need transform data long wide format. NBN atlas extract can deploy create_species_matrix function creates species matrix list sites observation ids. example can extract matrix insect observations…","code":"## create a safe version of the function safe_buff <- safely(tinyfoRest::get_nbn_buffer, otherwise = NA_real_)   ## extract data nbn_data <- safe_buff(tf_df$lon[100], tf_df$lat[100], n = 30000, tf_id = tf_df$tf_id[100]) #> 1.604 sec elapsed  ## use `result` nbn_out <- nbn_data$result |>   mutate( tf_id = tf_df$tf_id[100])  needs(ggspatial, prettymapr)  ## map nbn_out |>   filter(year > 2014) |>   st_as_sf(coords = c(\"decimalLongitude\", \"decimalLatitude\"), crs = 4326) |>   ggplot() +   ggspatial::annotation_map_tile() +   geom_sf(aes(colour = classs)) ## create a matrix of observations by class and year spp_matrix <- create_species_matrix(nbn_out, class = \"Insecta\") tf_bd_insects <- calc_bd_metrics(df = nbn_out, class = \"Insecta\") tf_bd_birds <- calc_bd_metrics(df = nbn_out, class = \"Aves\") tf_bd_mammals <- calc_bd_metrics(df = nbn_out, class = \"Mammalia\")  tf_bd_mammals$metrics #>   month richness  N     ratio diversity #> 1    03        1  5 0.2000000 0.0000000 #> 2    04        1  6 0.1666667 0.0000000 #> 3    05        6 10 0.6000000 0.7800000 #> 4    06        5 15 0.3333333 0.7822222 #> 5    08        5  6 0.8333333 0.7777778 #> 6    09        1  4 0.2500000 0.0000000 #> 7    10        1  2 0.5000000 0.0000000 #> 8  <NA>        1  2 0.5000000 0.0000000"},{"path":"/articles/using-tinyfoRest.html","id":"scaling-up","dir":"Articles","previous_headings":"Biodiversity data","what":"Scaling up","title":"How to use the `tinyfoRest` package","text":"compare biodiversity across TF areas can extract NBN data multiple sites using purrr package. Set .progress = TRUE track time takes run. Note: NBN atlas API 500000 download limit, sometimes bit temperamental.","code":"## sample tf_ids ##   sample <- sample_n(tf_df, 20) output <- map(1:nrow(sample), \\(x) safe_buff(lon = sample$lon[x], lat = sample$lat[x], tf_id = sample$tf_id[x], n = 30000), .progress = TRUE) #> 1.744 sec elapsed #> 14.421 sec elapsed #> 6.483 sec elapsed #> 7.756 sec elapsed #> 4.931 sec elapsed #> 3.228 sec elapsed #> 0.872 sec elapsed #> 6.424 sec elapsed #> 7.508 sec elapsed #> 1.537 sec elapsed #> 4.453 sec elapsed #> 2.154 sec elapsed #> 16.363 sec elapsed #> 2.113 sec elapsed #> 4.71 sec elapsed #> 1.627 sec elapsed #> 8.043 sec elapsed #> 3.973 sec elapsed #> 4.82 sec elapsed #> 0.264 sec elapsed  res <- map(output, \"result\")  res_1 <- res[which(!is.na(res))]  res_df <- list_rbind(res_1)"},{"path":"/articles/using-tinyfoRest.html","id":"explore-data","dir":"Articles","previous_headings":"Biodiversity data","what":"Explore data","title":"How to use the `tinyfoRest` package","text":"many observations per site per year? 157294 rows data 0 sites.","code":"sites <- res_df[[\"site\"]] |> unique()  res_counts <- res_df |>    filter(between(year, 2010, 2019)) |>   count(site, year)   res_counts |>   ggplot() +   geom_line(aes(year, n, group = site), colour = \"grey90\") +   geom_line(aes(year, n, group = site), colour = \"red\", data = res_counts |> filter(site == sites[2])) +   labs( y. = \"No of observations\",          caption = \"Source: NNB API\",          x = \"Year\",     title = \"Annual NBN observation counts per TF site\",         subtitle = paste0(\"Site \", res_counts |> filter(site == sites[2]) |> select(site) |> slice(1),  \" shown as red line\")) +   theme_minimal() +   theme(plot.title.position = \"plot\") +   scale_x_continuous(n.breaks = 10)"},{"path":"/articles/using-tinyfoRest.html","id":"split-by-taxa","dir":"Articles","previous_headings":"Biodiversity data","what":"Split by taxa","title":"How to use the `tinyfoRest` package","text":"","code":"res_counts_site <- res_df |>    filter(between(year, 2010, 2019),           site == sites[2]) |>   count(site, classs, year) |>   filter(n > 9) |>   ggplot(aes(factor(year), n)) +   geom_col() +   facet_wrap(~ classs, scales = \"free\") +   scale_x_discrete()  res_counts_site |# label: biodiversity-data-large |# eval: false  spp_matrix_large <- create_species_matrix(res_df, class = \"Insecta\")  spp_matrix_large  ## convert to presence matrix ##   spp_pres <- spp_matrix_large$sp |>   mutate_if(is.numeric, \\(x) ifelse(x == 0, 0, 1))"},{"path":"/articles/using-tinyfoRest.html","id":"explore-data-1","dir":"Articles","previous_headings":"Biodiversity data","what":"Explore data","title":"How to use the `tinyfoRest` package","text":"taxa alternative data sources may add additional value. example data 2020 Botanic Society Britain Ireland survey may give complete plant record 1km grid square (see ); eBIrd data may upto data bird observations. eBIrd data can obtained creating account eBIrd website completing request form specifying location requirements. approved data made available download.","code":""},{"path":"/articles/using-tinyfoRest.html","id":"plant-diversity-using-bsbi-data","dir":"Articles","previous_headings":"","what":"Plant diversity using BSBI data","title":"How to use the `tinyfoRest` package","text":"also included functions extract data 2020 Botanic Society Britain Ireland survey. publicly available UK National Grid 1k monads. requires conversion lat-longs UK grids.","code":"grid_ref <- os_lat_lon_to_grid(lon = sample$lon[2], lat = sample$lat[2]) #> Using virtual environment 'tinyforest' ...  grid_ref$grid #> [1] \"TQ3487\" bsbi_data <- get_bsbi_data(grid_ref = grid_ref$grid)  bsbi_data <- bsbi_data |>   enframe() |>   unnest(\"value\") |>   unnest(\"value\") |>   mutate(year = str_extract(value, \"20\\\\d{2}\"),          value = str_remove(value, year),          count = parse_number(value),          value = str_remove(value, as.character(count)),           value = str_remove(value, \"\\\\d{1,}\"),           grid = grid_ref$grid,           tf_id = sample$site[2],           species = str_remove(value, \"\\\\(\") ,          species = str_remove(species, \"\\\\)\"),           species = str_squish(species)) |>   arrange(value)  |>   drop_na()"},{"path":"/articles/using-tinyfoRest.html","id":"rapid-calculation-of-biodiversity-metrics","dir":"Articles","previous_headings":"","what":"Rapid calculation of biodiversity metrics","title":"How to use the `tinyfoRest` package","text":"calc_bd_metrics function takes output get_nbn_buffer get_bsbi_data, converts data long wide format, creates species matrix specified class (get_nbn_buffer data), outputs list containing: diversity metrics (Simpson) species richness month (plotted) Bray-Curtis matrix Raup matrix","code":"metrics <- calc_bd_metrics(df = nbn_data$result, class = \"Aves\")   metrics$metrics |>   gt::gt() metrics$plot +   labs(title = \"Monthly species richness for \",          subtitle = paste(\"Aves\", tf_df$site[1]),         y = \"Richness\",         x = \"Month\") +   theme(plot.title.position = \"plot\")"},{"path":"/articles/using-tinyfoRest.html","id":"vegetation-indices","dir":"Articles","previous_headings":"","what":"Vegetation indices","title":"How to use the `tinyfoRest` package","text":"package includes calc_ndvi_buff function enable calculation normalized vegetation index (NDVI) buffer area around given point. uses Sentinel2 surface reflectance satellite images available 10m resolution regularly updated. function extracts images via Google Earth Engine API requires registration authentication prior use (see…). function returns list including, image dates, NDVI statistics image, interactive map raster. Note may take minutes run. code chunk calculates NDVI image containing buffer around TF 2019 2022 maps side--side. (Note, function selects S2 images cloud cover < 10%).","code":"plant_date <- sample$plant_date |>   unique()  ee <- import(\"ee\") geemap <- import(\"geemap\")   ee$Initialize()  i <- 10  after <- get_vegetation_indices(tf_id = sites[i], buffer = 30, lon = sample$lon[i], lat = sample$lat[i], start = as.character(sample$plant_date[i]), end = as.character(today() ))  before <- get_vegetation_indices(tf_id = sites[i], buffer = 30, lon = sample$lon[i], lat = sample$lat[i], end = as.character(sample$plant_date[i]), start = as.character(sample$plant_date[i] - 365))  before$sf |>   ggplot() +   geom_density(aes(GLI)) +   geom_density(aes(GLI), data = after$sf, colour = \"green\") +   labs(title = paste(sample$plant_date[i], sites[i])) +   theme_minimal()"},{"path":[]},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Julian Flowers. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Flowers J (2024). tinyfoRest: Get Biodiversity Landcover/Landuse Data Tiny Forest areas. R package version 0.0.0.9000.","code":"@Manual{,   title = {tinyfoRest: Get Biodiversity and Landcover/Landuse Data for Tiny Forest areas},   author = {Julian Flowers},   year = {2024},   note = {R package version 0.0.0.9000}, }"},{"path":"/reference/calc_bd_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate seasonal bd metrics — calc_bd_metrics","title":"calculate seasonal bd metrics — calc_bd_metrics","text":"function calculates various biodiversity metrics (richness diversity) given tiny forest class","code":""},{"path":"/reference/calc_bd_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate seasonal bd metrics — calc_bd_metrics","text":"","code":"calc_bd_metrics(df, class)"},{"path":"/reference/calc_bd_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate seasonal bd metrics — calc_bd_metrics","text":"class class metrics need calculated tfid tiny forest id metrics need calculated","code":""},{"path":"/reference/calc_bd_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate seasonal bd metrics — calc_bd_metrics","text":"list containing following: metrics  : data.frame containing monthly values metrics matrix   : data.frame containing monthly count species site, wide format plot     : ggplot object showing monthly variation richness","code":""},{"path":"/reference/calc_bd_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calculate seasonal bd metrics — calc_bd_metrics","text":"","code":"calc_bd_metrics(85, 'Aves') #> Loading required package: permute #> Loading required package: lattice #> This is vegan 2.6-4 #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.1     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.3     ✔ tidyr     1.3.1 #> ✔ purrr     1.0.2      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::between()     masks data.table::between() #> ✖ dplyr::filter()      masks stats::filter() #> ✖ dplyr::first()       masks data.table::first() #> ✖ lubridate::hour()    masks data.table::hour() #> ✖ lubridate::isoweek() masks data.table::isoweek() #> ✖ dplyr::lag()         masks stats::lag() #> ✖ dplyr::last()        masks data.table::last() #> ✖ lubridate::mday()    masks data.table::mday() #> ✖ lubridate::minute()  masks data.table::minute() #> ✖ lubridate::month()   masks data.table::month() #> ✖ lubridate::quarter() masks data.table::quarter() #> ✖ lubridate::second()  masks data.table::second() #> ✖ purrr::transpose()   masks data.table::transpose() #> ✖ lubridate::wday()    masks data.table::wday() #> ✖ lubridate::week()    masks data.table::week() #> ✖ lubridate::yday()    masks data.table::yday() #> ✖ lubridate::year()    masks data.table::year() #> ℹ Use the conflicted package to force all conflicts to become errors #> Error: Argument 'x' to 'setDT' should be a 'list', 'data.frame' or 'data.table'"},{"path":"/reference/create_species_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a species matrix from a dataframe — create_species_matrix","title":"Create a species matrix from a dataframe — create_species_matrix","text":"function takes input dataframe, species tf_id columns, creates matrix species rows tf_id columns. Entries matrix counts number times species occurs site (represented tf_id).","code":""},{"path":"/reference/create_species_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a species matrix from a dataframe — create_species_matrix","text":"","code":"create_species_matrix(df, class = NULL)"},{"path":"/reference/create_species_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a species matrix from a dataframe — create_species_matrix","text":"df dataframe columns 'tf_id', 'species', 'classs' class string indicating ecological class interest","code":""},{"path":"/reference/create_species_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a species matrix from a dataframe — create_species_matrix","text":"list two elements: sp, species--tf_id matrix species counts; sites, vector unique tf_id values indicating sites represented matrix.","code":""},{"path":"/reference/create_species_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a species matrix from a dataframe — create_species_matrix","text":"","code":"data(iris) iris_species <- iris %>% select(Species) %>% mutate(classs = 'example') %>% rename(species = Species, tf_id = classs) create_species_matrix(iris_species, 'example') #> Loading required package: janitor #>  #> Attaching package: ‘janitor’ #> The following objects are masked from ‘package:stats’: #>  #>     chisq.test, fisher.test #> Error in select(df, tf_id, species, classs): Can't select columns that don't exist. #> ✖ Column `classs` doesn't exist."},{"path":"/reference/decimal_from_deg_min.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate decimal coordinates from degrees/minutes — decimal_from_deg_min","title":"Calculate decimal coordinates from degrees/minutes — decimal_from_deg_min","text":"Calculate decimal coordinates degrees/minutes","code":""},{"path":"/reference/decimal_from_deg_min.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate decimal coordinates from degrees/minutes — decimal_from_deg_min","text":"","code":"decimal_from_deg_min(degrees, minutes, point)"},{"path":"/reference/decimal_from_deg_min.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate decimal coordinates from degrees/minutes — decimal_from_deg_min","text":"point","code":""},{"path":"/reference/decimal_from_deg_min.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate decimal coordinates from degrees/minutes — decimal_from_deg_min","text":"data frame","code":""},{"path":"/reference/decimal_from_deg_min.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate decimal coordinates from degrees/minutes — decimal_from_deg_min","text":"","code":"decimal_from_deg_min(degrees, minutes, point) #> Error in eval(expr, envir, enclos): object 'degrees' not found"},{"path":"/reference/decimal_from_en.html","id":null,"dir":"Reference","previous_headings":"","what":"Get decimal coordinates from eastings and northings — decimal_from_en","title":"Get decimal coordinates from eastings and northings — decimal_from_en","text":"Uses https://webapps.bgs.ac.uk/data/webservices/CoordConvert_LL_BNG.cfc?method=BNGtoLatLng","code":""},{"path":"/reference/decimal_from_en.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get decimal coordinates from eastings and northings — decimal_from_en","text":"","code":"decimal_from_en(easting, northing)"},{"path":"/reference/decimal_from_en.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get decimal coordinates from eastings and northings — decimal_from_en","text":"data frame","code":""},{"path":"/reference/download_nbn_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download species occurrence data from NBN Atlas — download_nbn_data","title":"Download species occurrence data from NBN Atlas — download_nbn_data","text":"function downloads species occurrence data NBN Atlas specified location.","code":""},{"path":"/reference/download_nbn_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download species occurrence data from NBN Atlas — download_nbn_data","text":"","code":"download_nbn_data(lon, lat, radius = 1L)"},{"path":"/reference/download_nbn_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download species occurrence data from NBN Atlas — download_nbn_data","text":"lon longitude location. lat latitude location. radius radius around location search occurrences (default 1L).","code":""},{"path":"/reference/download_nbn_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download species occurrence data from NBN Atlas — download_nbn_data","text":"data frame containing downloaded species occurrence data.","code":""},{"path":"/reference/download_nbn_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download species occurrence data from NBN Atlas — download_nbn_data","text":"","code":"download_nbn_species(0, 0) #> Error in download_nbn_species(0, 0): could not find function \"download_nbn_species\""},{"path":"/reference/get_bsbi_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves BSBI( Botanical Society of Britain and Ireland) data for a given grid reference — get_bsbi_data","title":"Retrieves BSBI( Botanical Society of Britain and Ireland) data for a given grid reference — get_bsbi_data","text":"Retrieves BSBI( Botanical Society Britain Ireland) data given grid reference","code":""},{"path":"/reference/get_bsbi_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves BSBI( Botanical Society of Britain and Ireland) data for a given grid reference — get_bsbi_data","text":"","code":"get_bsbi_data(grid_ref)"},{"path":"/reference/get_bsbi_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves BSBI( Botanical Society of Britain and Ireland) data for a given grid reference — get_bsbi_data","text":"grid_ref valid UK Ordnance Survey grid reference","code":""},{"path":"/reference/get_bsbi_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves BSBI( Botanical Society of Britain and Ireland) data for a given grid reference — get_bsbi_data","text":"list containing records BSBI database given grid reference","code":""},{"path":"/reference/get_bsbi_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves BSBI( Botanical Society of Britain and Ireland) data for a given grid reference — get_bsbi_data","text":"","code":"get_bsbi_data(\"NY7250\") get_bsbi_data(\"TQ3080\")"},{"path":"/reference/get_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lat-longs — get_coordinates","title":"Get lat-longs — get_coordinates","text":"Get lat-longs","code":""},{"path":"/reference/get_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lat-longs — get_coordinates","text":"","code":"get_coordinates(text)"},{"path":"/reference/get_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lat-longs — get_coordinates","text":"text","code":""},{"path":"/reference/get_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lat-longs — get_coordinates","text":"matrix","code":""},{"path":"/reference/get_coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lat-longs — get_coordinates","text":"","code":"get_coordinates(text$text) #> Error in text$text: object of type 'closure' is not subsettable"},{"path":"/reference/get_dw_landcover.html","id":null,"dir":"Reference","previous_headings":"","what":"Get land cover data from the Dynamic World Land Cover dataset for a given location — get_dw_landcover","title":"Get land cover data from the Dynamic World Land Cover dataset for a given location — get_dw_landcover","text":"Downloads image collection Dynamic World Land Cover (DW) dataset Google Earth Engine (GEE) platform, filters using given location time frame, returns land cover statistics given area.","code":""},{"path":"/reference/get_dw_landcover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get land cover data from the Dynamic World Land Cover dataset for a given location — get_dw_landcover","text":"","code":"get_dw_landcover(   tf_id = tf_id,   lon = -0.25083,   lat = 52.5739214,   dist = 1000,   start_date = \"2023-01-01\",   end_date = \"2023-08-01\" )"},{"path":"/reference/get_dw_landcover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get land cover data from the Dynamic World Land Cover dataset for a given location — get_dw_landcover","text":"tf_id text: specify Tiny Forest site ID use, defaults tf_id lon numeric: longitude center area interest, defaults 0.0969 lat numeric: latitude center area interest, defaults 51.578 dist numeric: distance around center point create circular buffer meters, defaults 500 start_date character: starting date image collection, defaults '2022-01-01' end_date character: ending date image collection, defaults '2022-12-31'","code":""},{"path":"/reference/get_dw_landcover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get land cover data from the Dynamic World Land Cover dataset for a given location — get_dw_landcover","text":"list: list containing following items: map map object showing image collection area interest image_dates vector image dates collection buffer buffer distance used select area interest","code":""},{"path":"/reference/get_dw_landcover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get land cover data from the Dynamic World Land Cover dataset for a given location — get_dw_landcover","text":"","code":"if (FALSE) { # Get data for the default location get_dw_landcover()  # Get data for a specific location and buffer distance get_dw_landcover(tf_id= \"85\", lon = -1.472293, lat = 51.78398, dist = 1000) }"},{"path":"/reference/get_elevation.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Elevation — get_elevation","title":"Get Elevation — get_elevation","text":"function retrieves elevation given longitude latitude using Google Maps Elevation API.","code":""},{"path":"/reference/get_elevation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Elevation — get_elevation","text":"","code":"get_elevation(lat, lon, api_key)"},{"path":"/reference/get_elevation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Elevation — get_elevation","text":"lat latitude location. lon longitude location. api_key API key required make API call.","code":""},{"path":"/reference/get_elevation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Elevation — get_elevation","text":"elevation given location.","code":""},{"path":"/reference/get_elevation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Elevation — get_elevation","text":"","code":"get_elevation(-122.084, 37.422, 'your_api_key') #> Loading required package: needs #>  #> Load `package:needs` in an interactive session to set auto-load flag #> Loading required package: httr #> Loading required package: jsonlite #>  #> Attaching package: ‘jsonlite’ #> The following object is masked from ‘package:purrr’: #>  #>     flatten #> Loading required package: glue #> Loading required package: reticulate #> Warning: cannot open URL 'https://maps.googleapis.com/maps/api/elevation/json?locations=-122.084,37.422&key=your_api_key': HTTP status was '400 Bad Request' #> Error in open.connection(con, \"rb\"): cannot open the connection to 'https://maps.googleapis.com/maps/api/elevation/json?locations=-122.084,37.422&key=your_api_key'"},{"path":"/reference/get_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get locations — get_locations","title":"Get locations — get_locations","text":"Extracts locations text. Uses spaCy state art natural language processing tools returns data frame","code":""},{"path":"/reference/get_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get locations — get_locations","text":"","code":"get_locations(text)"},{"path":"/reference/get_locations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get locations — get_locations","text":"text","code":""},{"path":"/reference/get_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get locations — get_locations","text":"data frame","code":""},{"path":"/reference/get_locations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get locations — get_locations","text":"","code":"get_locations(text) #> Loading required package: spacyr #> Warning: there is no package called ‘spacyr’ #> Error in loadNamespace(x): there is no package called ‘spacyr’"},{"path":"/reference/get_nbn_buffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves occurrence data from NBN Atlas within a specified buffer around given longitude and latitude — get_nbn_buffer","title":"Retrieves occurrence data from NBN Atlas within a specified buffer around given longitude and latitude — get_nbn_buffer","text":"Retrieves occurrence data NBN Atlas within specified buffer around given longitude latitude","code":""},{"path":"/reference/get_nbn_buffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves occurrence data from NBN Atlas within a specified buffer around given longitude and latitude — get_nbn_buffer","text":"","code":"get_nbn_buffer(lon, lat, radius = 1, n = 10000, tf_id)"},{"path":"/reference/get_nbn_buffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves occurrence data from NBN Atlas within a specified buffer around given longitude and latitude — get_nbn_buffer","text":"lon numeric Longitude decimal degrees lat numeric Latitude decimal degrees radius numeric Buffer radius kilometers, default 1 km n numeric Maximum number occurrences retrieve, default 10,000","code":""},{"path":"/reference/get_nbn_buffer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves occurrence data from NBN Atlas within a specified buffer around given longitude and latitude — get_nbn_buffer","text":"data frame containing occurrence information within buffer","code":""},{"path":"/reference/get_nbn_buffer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves occurrence data from NBN Atlas within a specified buffer around given longitude and latitude — get_nbn_buffer","text":"","code":"get_nbn_buffer(-1.5, 52.0, 2) #> Loading required package: tictoc #>  #> Attaching package: ‘tictoc’ #> The following object is masked from ‘package:data.table’: #>  #>     shift #> 5.801 sec elapsed #> Error in dplyr::mutate(df$occurrences, site = tf_id): ℹ In argument: `site = tf_id`. #> Caused by error: #> ! argument \"tf_id\" is missing, with no default"},{"path":"/reference/get_osm_natural_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Natural Features — get_osm_natural_features","title":"Get Natural Features — get_osm_natural_features","text":"function extracts natural features within given buffer around specified tf_id location.","code":""},{"path":"/reference/get_osm_natural_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Natural Features — get_osm_natural_features","text":"","code":"get_osm_natural_features(df, tf_id = 85, buffer = 1000)"},{"path":"/reference/get_osm_natural_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Natural Features — get_osm_natural_features","text":"df data.frame containing location data. tf_id integer specifying focal point analysis. buffer numeric value specifying desired buffer size meters.","code":""},{"path":"/reference/get_osm_natural_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Natural Features — get_osm_natural_features","text":"list two items: d spatial objects data.frame (sf) containing natural features within buffer. b spatial objects data.frame (sf) containing buffer area around focal point.","code":""},{"path":"/reference/get_osm_natural_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Natural Features — get_osm_natural_features","text":"","code":"if (FALSE) { get_water_features(df, tf_id = 25, buffer = 500) }"},{"path":"/reference/get_phylopic_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Get PhyloPic Image — get_phylopic_image","title":"Get PhyloPic Image — get_phylopic_image","text":"function retrieves image PhyloPic API saves specified directory.","code":""},{"path":"/reference/get_phylopic_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get PhyloPic Image — get_phylopic_image","text":"","code":"get_phylopic_image(search, path)"},{"path":"/reference/get_phylopic_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get PhyloPic Image — get_phylopic_image","text":"search character string containing name organism scientific name taxon. path character string specifying directory save image file.","code":""},{"path":"/reference/get_phylopic_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get PhyloPic Image — get_phylopic_image","text":"image saved directory specified path parameter.","code":""},{"path":"/reference/get_phylopic_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get PhyloPic Image — get_phylopic_image","text":"","code":"get_phylopic_image(\"Homo sapiens\", \"C:/images/\") #> Loading required package: rphylopic #> You are using rphylopic v.1.4.0. Please remember to credit PhyloPic contributors (hint: `get_attribution()`) and cite rphylopic in your work (hint: `citation(\"rphylopic\")`). #> [1] \"9c6af553-390c-4bdd-baeb-6992cbc540b1\" #> Error in save_phylopic(img = img, path = path):  format not supported by this function. Use one of the following: pdf, png, svg, tiff, jpeg, jpg, bmp  get_phylopic_image(\"Gorilla gorilla\", \"D:/pictures/\") #> [1] \"142e0571-3b5f-443d-a887-b572a224ea22\" #> Error in save_phylopic(img = img, path = path):  format not supported by this function. Use one of the following: pdf, png, svg, tiff, jpeg, jpg, bmp"},{"path":"/reference/get_s2_landcover.html","id":null,"dir":"Reference","previous_headings":"","what":"Get S2 Landcover — get_s2_landcover","title":"Get S2 Landcover — get_s2_landcover","text":"Function retrieve Sentinel-2 landcover data specified location time period.","code":""},{"path":"/reference/get_s2_landcover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get S2 Landcover — get_s2_landcover","text":"","code":"get_s2_landcover(   tf_id = 85,   lon = -0.25083,   lat = 52.5739214,   dist = 1000,   start_date = \"2023-01-01\",   end_date = \"2023-09-01\" )"},{"path":"/reference/get_s2_landcover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get S2 Landcover — get_s2_landcover","text":"tf_id Numeric ID associated training forest default = tf_id. lon Numeric, longitude coordinate location default = -0.250830. lat Numeric, latitude coordinate location default = 52.5739214. dist Numeric, buffer distance meters around location default = 1000. start_date Character string, start date time period 'YYYY-MM-DD' format default = '2023-01-01'. end_date Character string, end date time period 'YYYY-MM-DD' format default = '2023-09-01'.","code":""},{"path":"/reference/get_s2_landcover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get S2 Landcover — get_s2_landcover","text":"","code":"## Specify the tf_id tf_id <- 85  ## Specify the location coordinates lon <- -0.250830 lat <- 52.5739214  ## Specify the buffer distance dist <- 1000  ## Specify the time period start_date <- '2023-01-01' end_date <- '2023-09-01'  ## Call the get_s2_landcover function get_s2_landcover(tf_id = tf_id, lon = lon, lat = lat, dist = dist) #> Loading required package: rgee #> Loading required package: tidyrgee #>  #> Attaching package: ‘tidyrgee’ #> The following object is masked from ‘package:stats’: #>  #>     filter #> The following object is masked from ‘package:graphics’: #>  #>     clip #> Loading required package: stars #> Loading required package: abind #> Loading required package: sf #> Linking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE #> Loading required package: terra #> terra 1.7.71 #>  #> Attaching package: ‘terra’ #> The following objects are masked from ‘package:tictoc’: #>  #>     shift, size #> The following object is masked from ‘package:glue’: #>  #>     trim #> The following object is masked from ‘package:janitor’: #>  #>     crosstab #> The following object is masked from ‘package:tidyr’: #>  #>     extract #> The following object is masked from ‘package:data.table’: #>  #>     shift #> Error in py_discover_config(required_module, use_environment): Python specified in RETICULATE_PYTHON (Users/julianflowers/.virtualenvs/thesis-final/bin/python) does not exist"},{"path":"/reference/get_tf_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Tiny Forest Data — get_tf_data","title":"Get Tiny Forest Data — get_tf_data","text":"function scrapes information tiny forests specified URL creates data frame scraped information.","code":""},{"path":"/reference/get_tf_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Tiny Forest Data — get_tf_data","text":"","code":"get_tf_data()"},{"path":"/reference/get_tf_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Tiny Forest Data — get_tf_data","text":"url URL scrape tiny forest data.","code":""},{"path":"/reference/get_tf_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Tiny Forest Data — get_tf_data","text":"list containing several objects: id_table data frame containing information tiny forest, including URL, stub, tf_id. tidy_tf tidy data frame cleaned transformed information tiny forest. tidy_tf_sf spatial data frame longitude latitude columns, suitable mapping. tidy_tf_uk_map map showing locations tiny forests UK Ireland.","code":""},{"path":"/reference/get_tf_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Tiny Forest Data — get_tf_data","text":"","code":"if (FALSE) {   get_tf_data() }"},{"path":"/reference/get_tf_images.html","id":null,"dir":"Reference","previous_headings":"","what":"Save ggmap Images — get_tf_images","title":"Save ggmap Images — get_tf_images","text":"function saves ggmap satellite image given longitude latitude.","code":""},{"path":"/reference/get_tf_images.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save ggmap Images — get_tf_images","text":"","code":"get_tf_images(lon, lat, key, zoom = 15, tf_id)"},{"path":"/reference/get_tf_images.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save ggmap Images — get_tf_images","text":"lon longitude center image lat latitude center image key Google API key ggmap imagery zoom degree zoom image; default = 15 tf_id earthwatch id Tiny Forest","code":""},{"path":"/reference/get_tf_images.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save ggmap Images — get_tf_images","text":"","code":"get_ggmap_images(-71.0636, 42.3581, \"API_key\", zoom=19) #> Error in get_ggmap_images(-71.0636, 42.3581, \"API_key\", zoom = 19): could not find function \"get_ggmap_images\""},{"path":"/reference/get_vegetation_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Vegetation Indices — get_vegetation_indices","title":"Get Vegetation Indices — get_vegetation_indices","text":"function retrieves vegetation indices Sentinel-2 satellite imagery within specified region interest.","code":""},{"path":"/reference/get_vegetation_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Vegetation Indices — get_vegetation_indices","text":"","code":"get_vegetation_indices(   tf_id,   buffer = 1000,   lat,   lon,   start = \"2023-01-01\",   end = \"2023-08-01\" )"},{"path":"/reference/get_vegetation_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Vegetation Indices — get_vegetation_indices","text":"tf_id ID Tiny Forest tinyForestR package. buffer buffer distance meters around region interest. Default 1000 meters. lat latitude center region interest. lon longitude center region interest. start start date image collection. Default '2023-01-01'. end end date image collection. Default '2023-08-01'.","code":""},{"path":"/reference/get_water_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Natural Water Features — get_water_features","title":"Get Natural Water Features — get_water_features","text":"function extracts natural water features within given buffer around specified tf_id location.","code":""},{"path":"/reference/get_water_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Natural Water Features — get_water_features","text":"","code":"get_water_features(df, tf_id = 85, buffer = 1000)"},{"path":"/reference/get_water_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Natural Water Features — get_water_features","text":"df data.frame containing location data. tf_id integer specifying focal point analysis. buffer numeric value specifying desired buffer size meters.","code":""},{"path":"/reference/get_water_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Natural Water Features — get_water_features","text":"list two items: d spatial objects data.frame (sf) containing natural water features within buffer. b spatial objects data.frame (sf) containing buffer area around focal point.","code":""},{"path":"/reference/get_water_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Natural Water Features — get_water_features","text":"","code":"if (FALSE) { get_water_features(df, tf_id = 25, buffer = 500) }"},{"path":"/reference/initialise_tf.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize TinyForest package virtual environment — initialise_tf","title":"Initialize TinyForest package virtual environment — initialise_tf","text":"function initializes TinyForest environment required dependencies libraries.","code":""},{"path":"/reference/initialise_tf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize TinyForest package virtual environment — initialise_tf","text":"","code":"initialise_tf()"},{"path":"/reference/initialise_tf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize TinyForest package virtual environment — initialise_tf","text":"explicit output, function creates configures required environment TinyForest.","code":""},{"path":"/reference/initialise_tf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize TinyForest package virtual environment — initialise_tf","text":"","code":"initialize_tf() #> Error in initialize_tf(): could not find function \"initialize_tf\""},{"path":"/reference/os_grid_to_lat_lon.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts Ordnance Survey grid reference to latitude and longitude — os_grid_to_lat_lon","title":"Converts Ordnance Survey grid reference to latitude and longitude — os_grid_to_lat_lon","text":"function converts Ordnance Survey grid reference latitude longitude. requires reticulate tidyverse packages installed, well OSGridConverter python package.","code":""},{"path":"/reference/os_grid_to_lat_lon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts Ordnance Survey grid reference to latitude and longitude — os_grid_to_lat_lon","text":"","code":"os_grid_to_lat_lon(grid)"},{"path":"/reference/os_grid_to_lat_lon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts Ordnance Survey grid reference to latitude and longitude — os_grid_to_lat_lon","text":"grid character vector Ordnance Survey grid reference (e.g. 'TL4871')","code":""},{"path":"/reference/os_grid_to_lat_lon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts Ordnance Survey grid reference to latitude and longitude — os_grid_to_lat_lon","text":"list longitude latitude decimal degrees.","code":""},{"path":"/reference/os_lat_lon_to_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Latitude and Longitude to Ordnance Survey Grid Reference — os_lat_lon_to_grid","title":"Convert Latitude and Longitude to Ordnance Survey Grid Reference — os_lat_lon_to_grid","text":"function uses 'OSGridConverter' Python package convert latitude longitude coordinates Ordnance Survey grid references.","code":""},{"path":"/reference/os_lat_lon_to_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Latitude and Longitude to Ordnance Survey Grid Reference — os_lat_lon_to_grid","text":"","code":"os_lat_lon_to_grid(lat, lon)"},{"path":"/reference/os_lat_lon_to_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Latitude and Longitude to Ordnance Survey Grid Reference — os_lat_lon_to_grid","text":"lat numeric vector latitude coordinates lon numeric vector longitude coordinates","code":""},{"path":"/reference/os_lat_lon_to_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Latitude and Longitude to Ordnance Survey Grid Reference — os_lat_lon_to_grid","text":"list string containing Ordnance Survey grid reference lat-lon coordinate pair.","code":""},{"path":[]},{"path":"/reference/os_lat_lon_to_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Latitude and Longitude to Ordnance Survey Grid Reference — os_lat_lon_to_grid","text":"","code":"os_lat_lon_to_grid(-2.353, 51.509) #> Using virtual environment 'tinyforest' ... #> + /Users/julianflowers/.virtualenvs/tinyforest/bin/python -m pip install --upgrade --no-user OSGridConverter"},{"path":"/reference/os_ngd_api_call.html","id":null,"dir":"Reference","previous_headings":"","what":"os_ngd_api_call — os_ngd_api_call","title":"os_ngd_api_call — os_ngd_api_call","text":"Calls Ordnance Survey OpenSpace National Geographic Database API returns list containing results API call URL.","code":""},{"path":"/reference/os_ngd_api_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"os_ngd_api_call — os_ngd_api_call","text":"","code":"os_ngd_api_call(bbox, key, offset)"},{"path":"/reference/os_ngd_api_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"os_ngd_api_call — os_ngd_api_call","text":"bbox bounding box spatial object numeric vector xmin, ymin, xmax, ymax coordinates. key API key Ordnance Survey Data Hub. offset offset value pagination.","code":""},{"path":"/reference/os_ngd_api_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"os_ngd_api_call — os_ngd_api_call","text":"list two elements: os_lc: result API call spatial object class sf. url: API call URL used.","code":""},{"path":"/reference/os_ngd_api_call.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"os_ngd_api_call — os_ngd_api_call","text":"","code":"bbox <- c(-2.16, 53.9, -2.13, 53.92) key <- Sys.getenv('OS_DATA_HUB') os_ngd_api_call(bbox, key, 0) #> Warning: cannot open URL 'https://api.os.uk/features/ngd/ofa/v1/collections/lnd-fts-land-1/items?bbox=NA,NA,NA,NA&key=QQfpQgnuiTQLA3fErTbffq8G4VOGdP6b&limit=100&offset=0': HTTP status was '400 Bad Request' #> Error in value[[3L]](cond): There was an error downloading the geojson"},{"path":"/reference/os_ngd_api_call_water.html","id":null,"dir":"Reference","previous_headings":"","what":"os_ngd_api_call — os_ngd_api_call_water","title":"os_ngd_api_call — os_ngd_api_call_water","text":"Calls Ordnance Survey OpenSpace National Geographic Database API returns list containing results API call URL.","code":""},{"path":"/reference/os_ngd_api_call_water.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"os_ngd_api_call — os_ngd_api_call_water","text":"","code":"os_ngd_api_call_water(bbox, api_key, offset)"},{"path":"/reference/os_ngd_api_call_water.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"os_ngd_api_call — os_ngd_api_call_water","text":"bbox bounding box spatial object numeric vector xmin, ymin, xmax, ymax coordinates. offset offset value pagination. key API key Ordnance Survey Data Hub.","code":""},{"path":"/reference/os_ngd_api_call_water.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"os_ngd_api_call — os_ngd_api_call_water","text":"list two elements: os_lc: result API call spatial object class sf. url: API call URL used.","code":""},{"path":"/reference/os_ngd_api_call_water.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"os_ngd_api_call — os_ngd_api_call_water","text":"","code":"bbox <- c(-2.16, 53.9, -2.13, 53.92) key <- Sys.getenv('OS_DATA_HUB') os_ngd_api_call(bbox, key, 0) #> Warning: cannot open URL 'https://api.os.uk/features/ngd/ofa/v1/collections/lnd-fts-land-1/items?bbox=NA,NA,NA,NA&key=QQfpQgnuiTQLA3fErTbffq8G4VOGdP6b&limit=100&offset=0': HTTP status was '400 Bad Request' #> Error in value[[3L]](cond): There was an error downloading the geojson"},{"path":"/reference/tinyfoRest-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tinyfoRest: What the Package Does (One Line, Title Case) — tinyfoRest-package","title":"tinyfoRest: What the Package Does (One Line, Title Case) — tinyfoRest-package","text":"package (one paragraph).","code":""},{"path":"/reference/tinyfoRest-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tinyfoRest: What the Package Does (One Line, Title Case) — tinyfoRest-package","text":"Maintainer: First Last first.last@example.com (ORCID)","code":""}]
